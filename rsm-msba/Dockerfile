FROM vnijs/radiant:latest
LABEL Vincent Nijs "radiant@rady.ucsd.edu"
USER root

ARG DOCKERHUB_VERSION_UPDATE
ENV DOCKERHUB_VERSION=${DOCKERHUB_VERSION_UPDATE}

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update \
  && apt-get -y upgrade \
  && apt-get -y install --no-install-recommends \
  python3-venv \
  python3-virtualenv \
  libzmq3-dev \
  graphviz 

# install python packages
COPY requirements-base.txt /home/${NB_USER}/requirements.txt
# COPY requirements.txt /home/${NB_USER}/requirements.txt
RUN pip3 install -r /home/${NB_USER}/requirements.txt \
  && rm /home/${NB_USER}/requirements.txt \
  && python3 -m bash_kernel.install

# requires seperate install for some reason
RUN pip3 install 'pyrsm>=0.2.8'
# RUN pip3 install -vvv git+git://github.com/vnijs/pyrsm@master

ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash \
  && apt-get install -y nodejs \
  && npm install -g npm

RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager \
  && jupyter serverextension enable jupyterlab_sql --py --sys-prefix --system

RUN jupyter labextension install @jupyterlab/git jupyterlab-jupytext \
  && jupyter serverextension enable --py jupyterlab_git --system

RUN jupyter labextension install @ryantam626/jupyterlab_code_formatter \
  && jupyter serverextension enable --py jupyterlab_code_formatter --system 

# install the R kernel for Jupyter Lab
RUN R -e 'install.packages("IRkernel")' \
  && R -e 'IRkernel::installspec(user = FALSE)'

# install google chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
  && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list' \
  && apt-get -y update \
  && apt-get install -y google-chrome-stable \
  && wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip \
  && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \
  && chmod 777 /usr/local/bin/chromedriver \
  && rm -rf /tmp/* 

# copy logo for use with jupyterlab
COPY images/logo200.svg /opt/radiant/logo.svg

RUN pip3 install jupyter-server-proxy==1.5.0 \ 
  && jupyter serverextension enable --py --sys-prefix jupyter_server_proxy

# RUN pip3 install git+https://github.com/vnijs/jupyter-rsession-proxy \
  # && chown ${NB_USER}:shiny -R /var/lib/shiny-server 

RUN pip3 install jupyter-rsession-proxy==1.2 

# RUN pip3 install -vvv git+git://github.com/jupyterhub/jupyter-server-proxy@master && \
#   jupyter serverextension enable --py --sys-prefix jupyter_server_proxy

# RUN (cd /tmp && \
#   git clone https://github.com/jupyterhub/jupyter-server-proxy && \
#   cd /tmp/jupyter-server-proxy/jupyterlab-server-proxy && \
#   npm install && npm run build && jupyter labextension link . )

# set jupyterlab password based on docker run argument
# ARG only leads to conflict with rstudio on alternate port
ARG JPASSWORD=${JPASSWORD:-jupyter}
ENV JPASSWORD=${JPASSWORD}

# adding postgres
# mostly from https://docs.docker.com/engine/examples/postgresql_service/
ENV POSTGRES_VERSION=12

RUN apt-get update && apt-get install -y \
  postgresql-${POSTGRES_VERSION} \
  postgresql-client-${POSTGRES_VERSION} \
  postgresql-contrib-${POSTGRES_VERSION}

# Run the rest of the commands as the postgres user
USER postgres

ARG PGPASSWORD=${PGPASSWORD:-postgres}
ENV PGPASSWORD=${PGPASSWORD}

# create a postgres role for ${NB_USER} with "postgres" as the password
# create a database "rsm-docker" owned by the ${NB_USER} role.
RUN /etc/init.d/postgresql start \
  && psql --command "CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD '${PGPASSWORD}';" \
  && createdb -O ${NB_USER} rsm-docker

COPY postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf
COPY pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf

USER root

# settings for local install of python packages 
ENV PYTHONUSERBASE=${PYBASE} \
  JUPYTER_PATH=${PYBASE}/share/jupyter \
  JUPYTER_RUNTIME_DIR=/tmp/jupyter/runtime \
  JUPYTER_CONFIG_DIR=${PYBASE}/jupyter \
  SHELL=/bin/bash

# Adding a "clean up" script
COPY clean.sh /usr/local/bin/clean
RUN chmod +x /usr/local/bin/clean

# install script for spacevim
COPY spacevim/spacevim.sh /usr/local/bin/svim
RUN chmod +x /usr/local/bin/svim

# codeserver version
ENV CODE_SERVERV="v3.4.1"
ENV CODE_SERVER="3.4.1"

RUN cd /opt \
  && mkdir /opt/code-server \
  && cd /opt/code-server \
  && wget -qO- https://github.com/cdr/code-server/releases/download/${CODE_SERVERV}/code-server-${CODE_SERVER}-linux-amd64.tar.gz | tar zxvf - --strip-components=1

# locations to store vscode / code-server settings
ARG CODE_WORKINGDIR="/home/$NB_USER/git" 
ENV CODE_WORKINGDIR="${CODE_WORKINGDIR}" \
  CODE_USER_DATA_DIR="/home/$NB_USER/.rsm-msba/share/code-server" \
  CODE_EXTENSIONS_DIR="/home/$NB_USER/.rsm-msba/share/code-server/extensions" \
  CODE_BUILTIN_EXTENSIONS_DIR="/opt/code-server/extensions" \
  PATH=/opt/code-server:$PATH

# make environment variable available from Rstudio
RUN echo "CODE_EXTENSIONS_DIR=${CODE_EXTENSIONS_DIR}" >> /etc/R/Renviron.site

# setup for code-server (aka vscode)
COPY images/vscode.svg /opt/code-server/vscode.svg
COPY settings.json /opt/code-server/settings.json
# COPY vsix/*.vsix /opt/code-server/extensions/
COPY setup.sh /usr/local/bin/setup
RUN chmod +x /usr/local/bin/setup
RUN chmod +x /usr/local/bin/setup


## testing

RUN pip3 install jupyter-rsession-proxy==1.2 

RUN pip3 install jupyter-server-proxy==1.5.0 \ 
  && jupyter serverextension enable --py --sys-prefix jupyter_server_proxy




# RUN pip3 install git+https://github.com/vnijs/jupyter-rsession-proxy \
  # && chown ${NB_USER}:shiny -R /var/lib/shiny-server 









# update R-packages
# RUN R -e 'remotes::install_github("vnijs/Diagrammer", upgrade = "never")' \ 
# RUN R -e 'remotes::install_github("bmschmidt/wordVectors", upgrade = "never")' \
#   -e 'install.packages("igraph", repos = "https://cran.rstudio.com")'

# RUN R -e 'options(HTTPUserAgent = sprintf("R/%s R (%s)", getRversion(), paste(getRversion(), R.version$platform, R.version$arch, R.version$os)))' \
#   -e 'radiant.update::radiant.update(repos = "https://rsm-compute-01.ucsd.edu:4242/rsm-msba/__linux__/bionic/latest")'

# updating the supervisord.conf file for Jupyter
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy the launch script into the image
ADD https://raw.githubusercontent.com/radiant-rstats/docker/master/launch-rsm-msba.sh /opt/launch.sh
RUN chmod 777 /opt/launch.sh

EXPOSE 8181 8787 8989 9898 8765

RUN addgroup ${NB_USER} postgres
COPY jupyter_notebook_config.py /etc/jupyter/

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

RUN git clone https://github.com/vnijs/gitgadget.git /srv/shiny-server/gitgadget/ \
  && chown shiny:shiny -R /srv/shiny-server

COPY images/gitgadget.svg /opt/gitgadget/gitgadget.svg

USER ${NB_USER}
ENV HOME /home/${NB_USER}
